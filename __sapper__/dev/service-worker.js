!function(){"use strict";const e=["/client/client.3b01e868.js","/client/client.0e338dc6.js","/client/index.3d02061f.js","/client/sapper-dev-client.1e7a4a5e.js"].concat(["/service-worker-index.html","/favicon.png","/loading.svg","/logo-192.png","/logo-512.png","/manifest.json","/weather.css"]),t=new Set(e);self.addEventListener("install",t=>{t.waitUntil(caches.open("cache1602570853156").then(t=>t.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const t of e)"cache1602570853156"!==t&&await caches.delete(t);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const n=new URL(e.request.url);n.protocol.startsWith("http")&&(n.hostname===self.location.hostname&&n.port!==self.location.port||(n.host===self.location.host&&t.has(n.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1602570853156").then(async t=>{try{const n=await fetch(e.request);return t.put(e.request,n.clone()),n}catch(n){const s=await t.match(e.request);if(s)return s;throw n}}))))})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS13b3JrZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub2RlX21vZHVsZXMvQHNhcHBlci9zZXJ2aWNlLXdvcmtlci5qcyIsIi4uLy4uL3NyYy9zZXJ2aWNlLXdvcmtlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IFNhcHBlciDigJQgZG8gbm90IGVkaXQgaXQhXG5leHBvcnQgY29uc3QgdGltZXN0YW1wID0gMTYwMjU3MDg1MzE1NjtcblxuZXhwb3J0IGNvbnN0IGZpbGVzID0gW1xuXHRcIi9zZXJ2aWNlLXdvcmtlci1pbmRleC5odG1sXCIsXG5cdFwiL2Zhdmljb24ucG5nXCIsXG5cdFwiL2xvYWRpbmcuc3ZnXCIsXG5cdFwiL2xvZ28tMTkyLnBuZ1wiLFxuXHRcIi9sb2dvLTUxMi5wbmdcIixcblx0XCIvbWFuaWZlc3QuanNvblwiLFxuXHRcIi93ZWF0aGVyLmNzc1wiXG5dO1xuZXhwb3J0IHsgZmlsZXMgYXMgYXNzZXRzIH07IC8vIGxlZ2FjeVxuXG5leHBvcnQgY29uc3Qgc2hlbGwgPSBbXG5cdFwiL2NsaWVudC9jbGllbnQuM2IwMWU4NjguanNcIixcblx0XCIvY2xpZW50L2NsaWVudC4wZTMzOGRjNi5qc1wiLFxuXHRcIi9jbGllbnQvaW5kZXguM2QwMjA2MWYuanNcIixcblx0XCIvY2xpZW50L3NhcHBlci1kZXYtY2xpZW50LjFlN2E0YTVlLmpzXCJcbl07XG5cbmV4cG9ydCBjb25zdCByb3V0ZXMgPSBbXG5cdHsgcGF0dGVybjogL15cXC8kLyB9XG5dOyIsImltcG9ydCB7IHRpbWVzdGFtcCwgZmlsZXMsIHNoZWxsLCByb3V0ZXMgfSBmcm9tICdAc2FwcGVyL3NlcnZpY2Utd29ya2VyJztcclxuXHJcbmNvbnN0IEFTU0VUUyA9IGBjYWNoZSR7dGltZXN0YW1wfWA7XHJcblxyXG4vLyBgc2hlbGxgIGlzIGFuIGFycmF5IG9mIGFsbCB0aGUgZmlsZXMgZ2VuZXJhdGVkIGJ5IHRoZSBidW5kbGVyLFxyXG4vLyBgZmlsZXNgIGlzIGFuIGFycmF5IG9mIGV2ZXJ5dGhpbmcgaW4gdGhlIGBzdGF0aWNgIGRpcmVjdG9yeVxyXG5jb25zdCB0b19jYWNoZSA9IHNoZWxsLmNvbmNhdChmaWxlcyk7XHJcbmNvbnN0IGNhY2hlZCA9IG5ldyBTZXQodG9fY2FjaGUpO1xyXG5cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdpbnN0YWxsJywgZXZlbnQgPT4ge1xyXG5cdGV2ZW50LndhaXRVbnRpbChcclxuXHRcdGNhY2hlc1xyXG5cdFx0XHQub3BlbihBU1NFVFMpXHJcblx0XHRcdC50aGVuKGNhY2hlID0+IGNhY2hlLmFkZEFsbCh0b19jYWNoZSkpXHJcblx0XHRcdC50aGVuKCgpID0+IHtcclxuXHRcdFx0XHRzZWxmLnNraXBXYWl0aW5nKCk7XHJcblx0XHRcdH0pXHJcblx0KTtcclxufSk7XHJcblxyXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2FjdGl2YXRlJywgZXZlbnQgPT4ge1xyXG5cdGV2ZW50LndhaXRVbnRpbChcclxuXHRcdGNhY2hlcy5rZXlzKCkudGhlbihhc3luYyBrZXlzID0+IHtcclxuXHRcdFx0Ly8gZGVsZXRlIG9sZCBjYWNoZXNcclxuXHRcdFx0Zm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xyXG5cdFx0XHRcdGlmIChrZXkgIT09IEFTU0VUUykgYXdhaXQgY2FjaGVzLmRlbGV0ZShrZXkpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzZWxmLmNsaWVudHMuY2xhaW0oKTtcclxuXHRcdH0pXHJcblx0KTtcclxufSk7XHJcblxyXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2ZldGNoJywgZXZlbnQgPT4ge1xyXG5cdGlmIChldmVudC5yZXF1ZXN0Lm1ldGhvZCAhPT0gJ0dFVCcgfHwgZXZlbnQucmVxdWVzdC5oZWFkZXJzLmhhcygncmFuZ2UnKSkgcmV0dXJuO1xyXG5cclxuXHRjb25zdCB1cmwgPSBuZXcgVVJMKGV2ZW50LnJlcXVlc3QudXJsKTtcclxuXHJcblx0Ly8gZG9uJ3QgdHJ5IHRvIGhhbmRsZSBlLmcuIGRhdGE6IFVSSXNcclxuXHRpZiAoIXVybC5wcm90b2NvbC5zdGFydHNXaXRoKCdodHRwJykpIHJldHVybjtcclxuXHJcblx0Ly8gaWdub3JlIGRldiBzZXJ2ZXIgcmVxdWVzdHNcclxuXHRpZiAodXJsLmhvc3RuYW1lID09PSBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lICYmIHVybC5wb3J0ICE9PSBzZWxmLmxvY2F0aW9uLnBvcnQpIHJldHVybjtcclxuXHJcblx0Ly8gYWx3YXlzIHNlcnZlIHN0YXRpYyBmaWxlcyBhbmQgYnVuZGxlci1nZW5lcmF0ZWQgYXNzZXRzIGZyb20gY2FjaGVcclxuXHRpZiAodXJsLmhvc3QgPT09IHNlbGYubG9jYXRpb24uaG9zdCAmJiBjYWNoZWQuaGFzKHVybC5wYXRobmFtZSkpIHtcclxuXHRcdGV2ZW50LnJlc3BvbmRXaXRoKGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KSk7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHQvLyBmb3IgcGFnZXMsIHlvdSBtaWdodCB3YW50IHRvIHNlcnZlIGEgc2hlbGwgYHNlcnZpY2Utd29ya2VyLWluZGV4Lmh0bWxgIGZpbGUsXHJcblx0Ly8gd2hpY2ggU2FwcGVyIGhhcyBnZW5lcmF0ZWQgZm9yIHlvdS4gSXQncyBub3QgcmlnaHQgZm9yIGV2ZXJ5XHJcblx0Ly8gYXBwLCBidXQgaWYgaXQncyByaWdodCBmb3IgeW91cnMgdGhlbiB1bmNvbW1lbnQgdGhpcyBzZWN0aW9uXHJcblx0LypcclxuXHRpZiAodXJsLm9yaWdpbiA9PT0gc2VsZi5vcmlnaW4gJiYgcm91dGVzLmZpbmQocm91dGUgPT4gcm91dGUucGF0dGVybi50ZXN0KHVybC5wYXRobmFtZSkpKSB7XHJcblx0XHRldmVudC5yZXNwb25kV2l0aChjYWNoZXMubWF0Y2goJy9zZXJ2aWNlLXdvcmtlci1pbmRleC5odG1sJykpO1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHQqL1xyXG5cclxuXHRpZiAoZXZlbnQucmVxdWVzdC5jYWNoZSA9PT0gJ29ubHktaWYtY2FjaGVkJykgcmV0dXJuO1xyXG5cclxuXHQvLyBmb3IgZXZlcnl0aGluZyBlbHNlLCB0cnkgdGhlIG5ldHdvcmsgZmlyc3QsIGZhbGxpbmcgYmFjayB0b1xyXG5cdC8vIGNhY2hlIGlmIHRoZSB1c2VyIGlzIG9mZmxpbmUuIChJZiB0aGUgcGFnZXMgbmV2ZXIgY2hhbmdlLCB5b3VcclxuXHQvLyBtaWdodCBwcmVmZXIgYSBjYWNoZS1maXJzdCBhcHByb2FjaCB0byBhIG5ldHdvcmstZmlyc3Qgb25lLilcclxuXHRldmVudC5yZXNwb25kV2l0aChcclxuXHRcdGNhY2hlc1xyXG5cdFx0XHQub3Blbihgb2ZmbGluZSR7dGltZXN0YW1wfWApXHJcblx0XHRcdC50aGVuKGFzeW5jIGNhY2hlID0+IHtcclxuXHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChldmVudC5yZXF1ZXN0KTtcclxuXHRcdFx0XHRcdGNhY2hlLnB1dChldmVudC5yZXF1ZXN0LCByZXNwb25zZS5jbG9uZSgpKTtcclxuXHRcdFx0XHRcdHJldHVybiByZXNwb25zZTtcclxuXHRcdFx0XHR9IGNhdGNoKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc3QgcmVzcG9uc2UgPSBhd2FpdCBjYWNoZS5tYXRjaChldmVudC5yZXF1ZXN0KTtcclxuXHRcdFx0XHRcdGlmIChyZXNwb25zZSkgcmV0dXJuIHJlc3BvbnNlO1xyXG5cclxuXHRcdFx0XHRcdHRocm93IGVycjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0KTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJ0b19jYWNoZSIsImNvbmNhdCIsImNhY2hlZCIsIlNldCIsInNlbGYiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJ3YWl0VW50aWwiLCJjYWNoZXMiLCJvcGVuIiwidGhlbiIsImNhY2hlIiwiYWRkQWxsIiwic2tpcFdhaXRpbmciLCJrZXlzIiwiYXN5bmMiLCJrZXkiLCJkZWxldGUiLCJjbGllbnRzIiwiY2xhaW0iLCJyZXF1ZXN0IiwibWV0aG9kIiwiaGVhZGVycyIsImhhcyIsInVybCIsIlVSTCIsInByb3RvY29sIiwic3RhcnRzV2l0aCIsImhvc3RuYW1lIiwibG9jYXRpb24iLCJwb3J0IiwiaG9zdCIsInBhdGhuYW1lIiwicmVzcG9uZFdpdGgiLCJtYXRjaCIsInJlc3BvbnNlIiwiZmV0Y2giLCJwdXQiLCJjbG9uZSIsImVyciJdLCJtYXBwaW5ncyI6InlCQUNPLE1DS0RBLEVEUWUsQ0FDcEIsNkJBQ0EsNkJBQ0EsNEJBQ0EseUNDWnNCQyxPREhGLENBQ3BCLDZCQUNBLGVBQ0EsZUFDQSxnQkFDQSxnQkFDQSxpQkFDQSxpQkNIS0MsRUFBUyxJQUFJQyxJQUFJSCxHQUV2QkksS0FBS0MsaUJBQWlCLFVBQVdDLElBQ2hDQSxFQUFNQyxVQUNMQyxPQUNFQyxLQVZXLHNCQVdYQyxLQUFLQyxHQUFTQSxFQUFNQyxPQUFPWixJQUMzQlUsS0FBSyxLQUNMTixLQUFLUyxtQkFLVFQsS0FBS0MsaUJBQWlCLFdBQVlDLElBQ2pDQSxFQUFNQyxVQUNMQyxPQUFPTSxPQUFPSixLQUFLSyxNQUFBQSxJQUVsQixJQUFLLE1BQU1DLEtBQU9GLEVBdEJOLHVCQXVCUEUsU0FBc0JSLE9BQU9TLE9BQU9ELEdBR3pDWixLQUFLYyxRQUFRQyxhQUtoQmYsS0FBS0MsaUJBQWlCLFFBQVNDLElBQzlCLEdBQTZCLFFBQXpCQSxFQUFNYyxRQUFRQyxRQUFvQmYsRUFBTWMsUUFBUUUsUUFBUUMsSUFBSSxTQUFVLE9BRTFFLE1BQU1DLEVBQU0sSUFBSUMsSUFBSW5CLEVBQU1jLFFBQVFJLEtBRzdCQSxFQUFJRSxTQUFTQyxXQUFXLFVBR3pCSCxFQUFJSSxXQUFheEIsS0FBS3lCLFNBQVNELFVBQVlKLEVBQUlNLE9BQVMxQixLQUFLeUIsU0FBU0MsT0FHdEVOLEVBQUlPLE9BQVMzQixLQUFLeUIsU0FBU0UsTUFBUTdCLEVBQU9xQixJQUFJQyxFQUFJUSxVQUNyRDFCLEVBQU0yQixZQUFZekIsT0FBTzBCLE1BQU01QixFQUFNYyxVQWNWLG1CQUF4QmQsRUFBTWMsUUFBUVQsT0FLbEJMLEVBQU0yQixZQUNMekIsT0FDRUMsS0FBSyx3QkFDTEMsS0FBS0ssTUFBQUEsSUFDTCxJQUNDLE1BQU1vQixRQUFpQkMsTUFBTTlCLEVBQU1jLFNBRW5DLE9BREFULEVBQU0wQixJQUFJL0IsRUFBTWMsUUFBU2UsRUFBU0csU0FDM0JILEVBQ04sTUFBTUksR0FDUCxNQUFNSixRQUFpQnhCLEVBQU11QixNQUFNNUIsRUFBTWMsU0FDekMsR0FBSWUsRUFBVSxPQUFPQSxFQUVyQixNQUFNSSJ9
